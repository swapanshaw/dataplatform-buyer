buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
		  maven {
    		url "https://plugins.gradle.org/m2/"
  		  }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin:"com.moowork.node"

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	springCloudVersion = 'Dalston.SR4'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-amqp')
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('io.springfox:springfox-swagger2:2.6.0')
	compile('io.springfox:springfox-swagger-ui:2.6.0')
	compile group: 'org.json', name: 'json', version: '20171018'
	compile fileTree(dir: 'libs', include: '*.jar')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

node 
{
  version = "6.9.4"
  download = false
  nodeModulesDir = file("frontend")
}

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall'){
  group = 'build'
  description = 'Compile client side folder for development'
  args = ['run','buildDev']
}

task buildClient(type:NpmTask, dependsOn:'npmInstall'){
  group = 'build'
  description = "Compile client side folder for production"
  args = ['run','build']
}

task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall'){
  group = 'application'
  description = "Build and watches the client side assets for rebuilding"
  args = ['run','buildWatch']
}

bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)